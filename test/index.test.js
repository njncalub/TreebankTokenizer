import TreebankTokenizer from "../src/index";

test("TreebankTokenizer.tokenize", () => {
  const t = new TreebankTokenizer();
  expect(
    t.tokenize(
      "Good muffins cost $3.88\nin New York.  Please buy me\ntwo of them.\nThanks."
    )
  ).toStrictEqual([
    "Good",
    "muffins",
    "cost",
    "$",
    "3.88",
    "in",
    "New",
    "York.",
    "Please",
    "buy",
    "me",
    "two",
    "of",
    "them.",
    "Thanks",
    ".",
  ]);

  expect(t.tokenize("They'll save and invest more.")).toStrictEqual([
    "They",
    "'ll",
    "save",
    "and",
    "invest",
    "more",
    ".",
  ]);

  expect(t.tokenize("Fetohep spotted a little boy playing alone. He was probably five, and he seemed unconcerned with danger. When he saw the camera crew—and the undead Revenant staring down at him—the boy froze.")).toStrictEqual([
    "Fetohep",
    "spotted",
    "a",
    "little",
    "boy",
    "playing",
    "alone.",
    "He",
    "was",
    "probably",
    "five",
    ",",
    "and",
    "he",
    "seemed",
    "unconcerned",
    "with",
    "danger.",
    "When",
    "he",
    "saw",
    "the",
    "camera",
    "crew",
    "—",
    "and",
    "the",
    "undead",
    "Revenant",
    "staring",
    "down",
    "at",
    "him",
    "—",
    "the",
    "boy",
    "froze",
    ".",
  ]);


  expect(t.tokenize("“Your statues have been greeted with multiple-day celebrations…in your honor, if you could care to dictate any holidays or…christening a warship…children named after Khelt’s rulers?”")).toStrictEqual([
    "“Your",
    "statues",
    "have",
    "been",
    "greeted",
    "with",
    "multiple-day",
    "celebrations",
    "…",
    "in",
    "your",
    "honor",
    ",",
    "if",
    "you",
    "could",
    "care",
    "to",
    "dictate",
    "any",
    "holidays",
    "or",
    "…",
    "christening",
    "a",
    "warship",
    "…",
    "children",
    "named",
    "after",
    "Khelt’s",
    "rulers",
    "?",
    "”",
  ]);

  expect(t.tokenize(`She said my name which is "Erin". How do you do? Thanks! [Square Brackets]`)).toStrictEqual([
    "She",
    "said",
    "my",
    "name",
    "which",
    "is",
    "``",
    "Erin",
    "''",
    ".",
    "How",
    "do",
    "you",
    "do",
    "?",
    "Thanks",
    "!",
    "[",
    "Square",
    "Brackets",
    "]",
  ]);

  expect(t.tokenize("“Your Majesty. High King Perric apologizes…profusely—for the misunderstanding and error among his people. He wishes to assure you that the issue of naming was in error, and they were tributes to your predecessors, not children named after Khelta…”")).toStrictEqual([
    "“Your",
    "Majesty.",
    "High",
    "King",
    "Perric",
    "apologizes",
    "…",
    "profusely",
    "—",
    "for",
    "the",
    "misunderstanding",
    "and",
    "error",
    "among",
    "his",
    "people.",
    "He",
    "wishes",
    "to",
    "assure",
    "you",
    "that",
    "the",
    "issue",
    "of",
    "naming",
    "was",
    "in",
    "error",
    ",",
    "and",
    "they",
    "were",
    "tributes",
    "to",
    "your",
    "predecessors",
    ",",
    "not",
    "children",
    "named",
    "after",
    "Khelta",
    "…",
    "”",
  ]);

  expect(t.tokenize("Well…‘sown’ implied saplings. Not a giant tree that had been literally carried in one of the colony ships. Half-Elves were clustering around it, doing everything from moisturizing the roots, making sure the soil roughly matched the new home for the tree, to even patting the tree to make sure it didn’t die of stress and the trauma of relocation.")).toStrictEqual([
    "Well",
    "…",
    "‘sown’",
    "implied",
    "saplings.",
    "Not",
    "a",
    "giant",
    "tree",
    "that",
    "had",
    "been",
    "literally",
    "carried",
    "in",
    "one",
    "of",
    "the",
    "colony",
    "ships.",
    "Half-Elves",
    "were",
    "clustering",
    "around",
    "it",
    ",",
    "doing",
    "everything",
    "from",
    "moisturizing",
    "the",
    "roots",
    ",",
    "making",
    "sure",
    "the",
    "soil",
    "roughly",
    "matched",
    "the",
    "new",
    "home",
    "for",
    "the",
    "tree",
    ",",
    "to",
    "even",
    "patting",
    "the",
    "tree",
    "to",
    "make",
    "sure",
    "it",
    "didn’t",
    "die",
    "of",
    "stress",
    "and",
    "the",
    "trauma",
    "of",
    "relocation",
    ".",
  ]);


  expect(t.tokenize("hi, my name can't hello,")).toStrictEqual([
    "hi",
    ",",
    "my",
    "name",
    "ca",
    "n't",
    "hello",
    ",",
  ]);

  var s =
    "Good muffins cost $3.88 (roughly 3,36 euros)\nin New York.  Please buy me\ntwo of them.\nThanks.";

  expect(t.tokenize(s)).toStrictEqual([
    "Good",
    "muffins",
    "cost",
    "$",
    "3.88",
    "(",
    "roughly",
    "3,36",
    "euros",
    ")",
    "in",
    "New",
    "York.",
    "Please",
    "buy",
    "me",
    "two",
    "of",
    "them.",
    "Thanks",
    ".",
  ]);

  expect(t.tokenize(s, true)).toStrictEqual([
    "Good",
    "muffins",
    "cost",
    "$",
    "3.88",
    "-LRB-",
    "roughly",
    "3,36",
    "euros",
    "-RRB-",
    "in",
    "New",
    "York.",
    "Please",
    "buy",
    "me",
    "two",
    "of",
    "them.",
    "Thanks",
    ".",
  ]);
});
